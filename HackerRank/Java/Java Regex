import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;

class Solution{

    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String IP = in.next();
            System.out.println(IP.matches(new MyRegex().pattern));
        }

    }
}

//Write your code here
class MyRegex{
   String pattern ="((2[0-5][0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\\.){3}(2[0-5][0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])"; 
}
//Explaination
/*
(2[0-5][0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9]) -->
Means either find 2[0-5][0-5] --> first character should be 2 second can be from 0 to 5 and third can be 0 to 5. Eg: 255(true) , 256(false)
                OR  2[0-4][0-9] --> first character should be 2 second can be from 0 to 4 and third can be 0 to 5 
                OR  [0-1]?[0-9]?[0-9] --> first character can be 0 or 1 second can be from 0 to 9 and third can be 0 to 9
                                          and you can skip first charcter and also second but not the third because thier is sign "?"
                {3} --> tells search only 3 item
